
// This file has been generated by the GUI designer. Do not modify.
namespace Hamekoz.UI.Gtk
{
	public partial class EntryLabeled
	{
		private global::Gtk.Table table2;
		
		private global::Gtk.DrawingArea drawingarea5;
		
		private global::Gtk.DrawingArea drawingarea6;
		
		private global::Gtk.DrawingArea drawingarea7;
		
		private global::Gtk.DrawingArea drawingarea8;
		
		private global::Gtk.VBox vbox;
		
		private global::Gtk.Label label;
		
		private global::Gtk.Entry entry;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Hamekoz.UI.Gtk.EntryLabeled
			global::Stetic.BinContainer.Attach (this);
			this.Name = "Hamekoz.UI.Gtk.EntryLabeled";
			// Container child Hamekoz.UI.Gtk.EntryLabeled.Gtk.Container+ContainerChild
			this.table2 = new global::Gtk.Table (((uint)(3)), ((uint)(3)), false);
			this.table2.Name = "table2";
			this.table2.RowSpacing = ((uint)(6));
			this.table2.ColumnSpacing = ((uint)(6));
			// Container child table2.Gtk.Table+TableChild
			this.drawingarea5 = new global::Gtk.DrawingArea ();
			this.drawingarea5.Name = "drawingarea5";
			this.table2.Add (this.drawingarea5);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table2 [this.drawingarea5]));
			w1.LeftAttach = ((uint)(1));
			w1.RightAttach = ((uint)(2));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.drawingarea6 = new global::Gtk.DrawingArea ();
			this.drawingarea6.Name = "drawingarea6";
			this.table2.Add (this.drawingarea6);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table2 [this.drawingarea6]));
			w2.TopAttach = ((uint)(1));
			w2.BottomAttach = ((uint)(2));
			w2.LeftAttach = ((uint)(2));
			w2.RightAttach = ((uint)(3));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.drawingarea7 = new global::Gtk.DrawingArea ();
			this.drawingarea7.Name = "drawingarea7";
			this.table2.Add (this.drawingarea7);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table2 [this.drawingarea7]));
			w3.TopAttach = ((uint)(2));
			w3.BottomAttach = ((uint)(3));
			w3.LeftAttach = ((uint)(1));
			w3.RightAttach = ((uint)(2));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.drawingarea8 = new global::Gtk.DrawingArea ();
			this.drawingarea8.Name = "drawingarea8";
			this.table2.Add (this.drawingarea8);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table2 [this.drawingarea8]));
			w4.TopAttach = ((uint)(1));
			w4.BottomAttach = ((uint)(2));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.vbox = new global::Gtk.VBox ();
			this.vbox.Name = "vbox";
			this.vbox.Spacing = 6;
			// Container child vbox.Gtk.Box+BoxChild
			this.label = new global::Gtk.Label ();
			this.label.Name = "label";
			this.label.Xalign = 0F;
			this.label.LabelProp = global::Mono.Unix.Catalog.GetString ("Label");
			this.vbox.Add (this.label);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox [this.label]));
			w5.Position = 0;
			w5.Expand = false;
			w5.Fill = false;
			// Container child vbox.Gtk.Box+BoxChild
			this.entry = new global::Gtk.Entry ();
			this.entry.CanFocus = true;
			this.entry.Name = "entry";
			this.entry.IsEditable = true;
			this.entry.InvisibleChar = '‚óè';
			this.vbox.Add (this.entry);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox [this.entry]));
			w6.Position = 1;
			w6.Expand = false;
			w6.Fill = false;
			this.table2.Add (this.vbox);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table2 [this.vbox]));
			w7.TopAttach = ((uint)(1));
			w7.BottomAttach = ((uint)(2));
			w7.LeftAttach = ((uint)(1));
			w7.RightAttach = ((uint)(2));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.table2);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
		}
	}
}
